Verify 'error, truncated marker line'


RUN: rm -rf %t
RUN: mkdir -p %t

RUN: printf '\0' > %t/NUL


Assemble.

RUN: mkdir %t/o

RUN: %target_as_cmd -o %t/o/1-1-C.o %S/1-1-C.s

RUN: %target_as_cmd -o %t/o/1-2-C.o %S/1-2-C.s


Archive dummy 'libc.a'.

RUN: mkdir %t/libc

RUN: %target_ar_cmd rcs %t/libc/libc.a %S/libc/libc_a-dtoa.o %S/libc/libc_a-environ.o %S/libc/libc_a-memset.o


Link.

RUN: %target_ld_cmd -o %t/1-1,1-2-C.nvptx %t/o/1-1-C.o %t/o/1-2-C.o -L%t/libc -lc


Inject truncated marker line.

RUN: printf '\n// BEGIN GLOBAL FUNCTION DEF: fun' > %t/tml
RUN: printf 'error, truncated marker line:\n// BEGIN GLOBAL FUNCTION DEF: fun\nwhile processing '\''[FILE]'\''\n' > %t/tmp.nm.stderr.golden

Append directly to '*.o'.

RUN: cat %t/tml >> %t/o/1-2-C.o
RUN: sed -e 's%\[FILE\]%o/1-2-C.o%' < %t/tmp.nm.stderr.golden >> %t/o/1-2-C.o.nm.stderr.golden

Add as a separate object file to linked '*.nvptx'; already the linker rejects 'o/1-2-C.o'.

RUN: cat %t/tml %t/NUL >> %t/1-1,1-2-C.nvptx
RUN: sed -e 's%\[FILE\]%1-1,1-2-C.nvptx%' < %t/tmp.nm.stderr.golden >> %t/1-1,1-2-C.nvptx.nm.stderr.golden


Test.

RUN: ( cd %t/ && %env_LC_COLLATE=C_target_nm_cmd o/1-2-C.o > stdout 2> stderr; r=$?; [ x"$r" = x1 ] )
RUN: cmp %t/o/1-2-C.o.nm.stderr.golden %t/stderr
RUN: ! test -s %t/stdout

RUN: ( cd %t/ && %env_LC_COLLATE=C_target_nm_cmd o/1-1-C.o o/1-2-C.o o/1-1-C.o > stdout 2> stderr; r=$?; [ x"$r" = x1 ] )
RUN: cmp %t/o/1-2-C.o.nm.stderr.golden %t/stderr
RUN: printf '\no/1-1-C.o:\n' > %t/stdout.golden
RUN: cat < %S/1-1-C.o.nm.golden >> %t/stdout.golden
RUN: cmp %t/stdout.golden %t/stdout

RUN: ( cd %t/ && %env_LC_COLLATE=C_target_nm_cmd o/1-1-C.o 1-1,1-2-C.nvptx o/1-2-C.o o/1-1-C.o > stdout 2> stderr; r=$?; [ x"$r" = x1 ] )
RUN: cmp %t/1-1,1-2-C.nvptx.nm.stderr.golden %t/stderr
RUN: printf '\no/1-1-C.o:\n' > %t/stdout.golden
RUN: cat < %S/1-1-C.o.nm.golden >> %t/stdout.golden
RUN: cmp %t/stdout.golden %t/stdout
